apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "kotlin-noarg"

android {
    compileSdkVersion compile_sdk_version

    dataBinding { enabled = true }

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        applicationId "cf.jone.test"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets{
        main{
            java.srcDirs += ['src/main/kt']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "android.arch.lifecycle:common-java8:1.1.1"

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    //    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    kapt 'com.android.databinding:compiler:3.1.3'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.android.support:multidex:1.0.2'
//    implementation project(':base')
//    implementation project(':base.impl.http')
//    implementation project(':base.impl.json')
}

noArg {
    annotation("cf.jone.test.NoArg")
}

fileTree(dir: 'libs', include: '**/*.aar')
        .each { File file ->
    dependencies.add("implementation", [
            name: file.name.lastIndexOf('.').with { it != -1 ? file.name[0..<it] : file.name },
            ext : 'aar'
    ])
}
